input {
  beats {
    port => 5044
    host => "0.0.0.0"
  }
}
filter {
  if [fileset][module] == "nginx" {
    if [fileset][name] == "access" {
      grok {
        match => { "message" => ["^%{IPORHOST:[nginx][access][host]} %{IPORHOST:[nginx][access][remote_ip]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} \"%{DATA:[nginx][access][referrer]}\" \"%{DATA:[nginx][access][user_agent]}\" %{NUMBER:[nginx][access][request_length]:int} %{NUMBER:[nginx][access][bytes_sent]:int} %{NUMBER:[nginx][access][request_time]:float} %{DATA:[trackit][session_id]} %{DATA:[trackit][user_id]} %{DATA:[trackit][session_type]} %{DATA:[trackit][equipment_id]} \"%{DATA:[trackit][device_id]\" \"%{DATA:[trackit][courier_device_id]}\"$"] }
        remove_field => "message"
      }
      mutate {
        add_field => { "read_timestamp" => "%{@timestamp}" }
      }
      date {
        match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
        remove_field => "[nginx][access][time]"
      }
    }
    else if [fileset][name] == "error" {
      grok {
        match => { "message" => ["%{DATA:[nginx][error][time]} \[%{DATA:[nginx][error][level]}\] %{NUMBER:[nginx][error][pid]}#%{NUMBER:[nginx][error][tid]}: (\*%{NUMBER:[nginx][error][connection_id]} )?%{GREEDYDATA:[nginx][error][message]}"] }
        remove_field => "message"
      }
      mutate {
        rename => { "@timestamp" => "read_timestamp" }
      }
      date {
        match => [ "[nginx][error][time]", "YYYY/MM/dd H:m:s" ]
        remove_field => "[nginx][error][time]"
      }
    }
  }
}
output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
